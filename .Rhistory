head(new)
if(1 in c(2,3,1)){"in"}
new$end.fl[new$weekday=="Monday" |
new$weekday=="Tuesday" |
new$weekday=="Wednesday" |
new$weekday=="Thursday" |
new$weekday=="Friday"]<-0
head(new)
qplot(interval,steps,data=new,facets=.~weekday)
qplot(interval,steps,data=new,facets=.~end.fl)
qplot(interval,steps,data=new,facets=end.fl~.)
library(lattice)
xyplot(steps~interval/end.fl,data=new,layout=c(1,2))
avg<-tapply(old$steps,old$interval,mean,na.rm=T)
plot(avg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
xyplot(steps~interval/end.fl,data=new,layout=c(1,2))
xyplot(steps~interval/end.fl,data=new,layout=c(2,1))
names(new)
table(new$end.fl)
dim(new)
qplot(interval,steps,data=new,facets=end.fl~.)
qplot(interval,steps,data=new,geom="line",facets=end.fl~.)
oldAvg<-tapply(old$steps,old$interval,mean,na.rm=T)
plot(oldAvg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
newAvg<-tapply(new$steps,new$interval,mean,na.rm=T)
head(newAvg)
qplot(time[1:288],newAvg,data=newAvg,facets=end.fl~.)
head(unclass(newAvg))
qplot(time[1:288],unclass(newAvg),data=newAvg,facets=end.fl~.)
head(as.numeric(newAvg))
qplot(time[1:288],as.numeric(newAvg),data=newAvg,facets=end.fl~.)
newAvg[1]
class(time[1:288])
class(as.numeric(time[1:288]))
qplot(as.numeric(time[1:288]),as.numeric(newAvg),data=newAvg,facets=end.fl~.)
par(mfrow=c(2,1))
plot(oldAvg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
newAvg<-tapply(new$steps,new$interval,mean,na.rm=T)
plot(newAvg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
par(mfrow=c(2,1))
plot(oldAvg,type="l",main="Average Daily Activity",ylab="Average steps")
newAvg<-tapply(new$steps,new$interval,mean,na.rm=T)
plot(newAvg,type="l",xlab="5-minute interval",ylab="Average steps")
lines(mean(oldAvg))
qplot(as.numeric(time[1:288]),as.numeric(newAvg),data=newAvg,facets=end.fl~.)
newAvg<-tapply(new$steps,new$interval,mean,na.rm=T)
plot(newAvg)
plot(newAvg,type="l")
qplot(newAvg,type="l")
?subset
newAvgWe<-with(subset(new,end.fl=1),tapply(new$steps,new$interval,mean,na.rm=T))
newAvgWd<-with(subset(new,end.fl=0),tapply(new$steps,new$interval,mean,na.rm=T))
qplot(newAvgWe,geom="density")
newt<-cbind(newAvgWe,NewAvgWd)
newt<-cbind(newAvgWe,newAvgWd)
class(newt)
names(newt)=c("weekend","weekday")
head(newt)
tail(newt)
avg(newAvgWe)
mean(newAvgWe)
mean(newAvgWd)
newMedian<-median(new$steps,na.rm=T);newMedian
head(new)
par(mfrow=c(2,1))
plot(oldAvg,type="l",main="Average Daily Activity",ylab="Steps before")
old<-read.csv("activity.csv",header=T)
time<-sprintf("%04d",as.numeric(as.character(old$interval)))
old$dttm<-strptime(paste(old$date,time),format="%Y-%m-%d %H%M")
oldSteps<-tapply(old$steps,old$date,sum)
hist(oldSteps,main="Steps Per Day",ylab="Days",xlab="Steps")
```
oldMean<-mean(oldSteps,na.rm=T);oldMean
oldMedian<-median(oldSteps,na.rm=T);oldMedian
oldAvg<-tapply(old$steps,old$interval,mean,na.rm=T)
plot(oldAvg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
oldAvg<-as.matrix(cbind(time[1:288],oldAvg),stringsAsFactors=FALSE)
max<-max(as.numeric(oldAvg[,2]))
peak<-oldAvg[oldAvg[,2]==max,1]
t<-strptime(peak,"%H%M")
format(t,"%H:%M")
comp<-complete.cases(old[,1:3])
nrow(old)-sum(comp)
new<-old
for(i in 1:dim(old)[1]){
if(is.na(old$steps[i])){
new$steps[i]<-as.integer(oldAvg[as.integer(oldAvg[,1])==old$interval[i],2])
}
}
```
newSteps<-tapply(new$steps,new$date,sum)
hist(newSteps,main="Steps Per Day",ylab="Days",xlab="Steps")
```
newMean<-mean(newSteps,na.rm=T);newMean
newMedian<-median(newSteps,na.rm=T);newMedian
oldMean-newMean
oldMedian-newMedian
newMean-oldMean
newMedian-oldMedian
new$day<-weekdays(new$dttm)
new$end.fl[new$day=="Saturday" | new$day=="Sunday"]<-1
new$end.fl[new$day=="Monday" | new$day=="Tuesday" | new$day=="Wednesday" | new$day=="Thursday" | new$day=="Friday"]<-0
head(new)
newAvgWe<-with(subset(new,end.fl=1),tapply(new$steps,new$interval,mean,na.rm=T))
newAvgWd<-with(subset(new,end.fl=0),tapply(new$steps,new$interval,mean,na.rm=T))
newt<-cbind(newAvgWe,newAvgWd)
head(newt)
sum(newAvgWe)
sum(newAvgWd)
new<-old
for(i in 1:dim(old)[1]){
if(is.na(old$steps[i])){
new$steps[i]<-as.integer(oldAvg[as.integer(oldAvg[,1])==old$interval[i],2])
}
}
head(new)
head(new,100)
names(new)
newSteps<-tapply(new$steps,new$date,sum)
hist(newSteps,main="Steps Per Day",ylab="Days",xlab="Steps")
newMean<-mean(newSteps,na.rm=T);newMean
newMedian<-median(newSteps,na.rm=T);newMedian
newMean-oldMean
newMedian-oldMedian
head(new)
new$day<-weekdays(new$dttm)
head(new)
tail(new)
new$end.fl[new$day=="Saturday" | new$day=="Sunday"]<-1
new$end.fl[new$day=="Monday" | new$day=="Tuesday" | new$day=="Wednesday" | new$day=="Thursday" | new$day=="Friday"]<-0
head(new)
head(new,100)
head(new,300)
head(new,600)
head(new,1200\)
head(new,1200)
head(new,1500)
head(new,1900)
plot(newAvgWe,type="l",main="Average Daily Activity",ylab="Weekend Steps")
plot(newAvgWd,type="l",xlab="5-minute interval",ylab="Weekday Steps")
head(activity)
head(old)
time
sprintf("%04d",data$interval)
sprintf("%04d",old$interval)
time<-sprintf("%04d",old$interval)
head(time)
old$interval<-as.POSIXct(strptime(old$interval,format="%H%M"))
head(old$interval)
head(old$interval,200)
head(old,200)
old<-read.csv("activity.csv",header=T)
head(old)
time<-sprintf("%04d",old$interval)
head(time)
old$interval<-strptime(old$interval,format="%H%M")
head(old$interval)
head(old$interval,200)
old<-read.csv("activity.csv",header=T)
head(old,50)
old$interval<-sprintf("%04d",old$interval)
head(old,50)
class(old$interval)
old$dttm<-strptime(paste(old$date,old$interval),format="%Y-%m-%d %H%M")
head(old,50)
oldSteps<-tapply(old$steps,old$date,sum)
hist(oldSteps,main="Distribution of Total Steps Per Day",
ylab="Number of Days",xlab="Number of Steps")
oldMean<-mean(oldSteps,na.rm=TRUE);oldMean
oldMedian<-median(oldSteps,na.rm=TRUE);oldMedian
oldAvg<-tapply(old$steps,old$interval,mean,na.rm=T)
plot(oldAvg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
head(oldAvg)
?ylim
oldSteps<-tapply(old$steps,old$date,sum)
hist(oldSteps,main="Total Steps Per Day",
ylab="Number of Days",xlab="Number of Steps",ylim=c(0,30))
oldMean<-mean(oldSteps,na.rm=TRUE);oldMean
oldMedian<-median(oldSteps,na.rm=TRUE);oldMedian
oldAvg<-tapply(old$steps,old$interval,mean,na.rm=T)
plot(oldAvg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
class(oldAvg)
class(oldAvg[1])
oldAvg[1]
head(oldAvg)
getwd()
path<-"/Users/mdowns/RepData_PeerAssessment1"
setwd(path)
url<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
file<-"activity.zip"
if (!file.exists(file)) {
download.file(url, file, mode = "curl")
unz(file,"activity.csv")
}
old<-read.csv("activity.csv",header=T)
old$interval<-sprintf("%04d",old$interval)
##old$interval<-strptime(old$interval,format="%H%M")
old$dttm<-strptime(paste(old$date,old$interval),format="%Y-%m-%d %H%M")
oldSteps<-tapply(old$steps,old$date,sum)
hist(oldSteps,main="Total Steps Per Day",
ylab="Number of Days",xlab="Number of Steps",ylim=c(0,30))
oldMean<-mean(oldSteps,na.rm=TRUE);oldMean
oldMedian<-median(oldSteps,na.rm=TRUE);oldMedian
oldAvg<-tapply(old$steps,old$interval,mean,na.rm=T)
plot(oldAvg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
oldAvg<-as.matrix(cbind(time[1:288],oldAvg),stringsAsFactors=FALSE)
oldAvg<-as.matrix(cbind(old$interval[1:288],oldAvg),stringsAsFactors=FALSE)
head(oldAvg)
max<-max(as.numeric(oldAvg[,2]))
max
peak<-oldAvg[oldAvg[,2]==max,1];peak
t<-strptime(peak,"%H%M")
t
format(t,"%H:%M")
format(t,"%H:%M")
comp<-complete.cases(old[,1:3])
sum(comp)
nrow(old)-sum(comp)
head(old,288)
oldAvg<-tapply(old$steps,old$interval,mean,na.rm=T)
plot(oldAvg,old$interval,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
plot(oldAvg,old$interval[1:288],type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
plot(old$interval[1:288],oldAvg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
plot(oldAvg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps")
head(oldAvg)
plot(oldAvg,type="l",main="Average Daily Activity",
xlab="5-minute interval",ylab="Average steps across all days")
```
oldAvg<-as.matrix(cbind(old$interval[1:288],oldAvg),stringsAsFactors=FALSE)
max<-max(as.numeric(oldAvg[,2]))
peak<-oldAvg[oldAvg[,2]==max,1]
t<-strptime(peak,"%H%M")
format(t,"%H:%M")
comp<-complete.cases(old[,1:3])
nrow(old)-sum(comp)
```
new<-old
for(i in 1:dim(old)[1]){
if(is.na(old$steps[i])){
new$steps[i]<-as.integer(oldAvg[as.integer(oldAvg[,1])==old$interval[i],2])
}
}
head(oldAvg)
head(as.ingeger(oldAvg[,1]))
head(as.integer(oldAvg[,1]))
head(as.integer(old$interval))
for(i in 1:dim(old)[1]){
if(is.na(old$steps[i])){
new$steps[i]<-as.integer(oldAvg[
as.integer(oldAvg[,1])==as.integer(old$interval[i]),2])
}
}
head(new)
newSteps<-tapply(new$steps,new$date,sum)
hist(newSteps,main="Steps Per Day",ylab="Days",xlab="Steps")
hist(newSteps,main="Steps Per Day",ylab="Days",xlab="Steps",ylim=c(0,35))
hist(newSteps,main="Steps Per Day",ylab="Days",xlab="Steps",ylim=c(0,40))
hist(newSteps,main="Steps Per Day",ylab="Days",xlab="Steps",ylim=c(0,35))
oldMean<-mean(oldSteps,na.rm=TRUE);oldMean
oldMedian<-median(oldSteps,na.rm=TRUE);oldMedian
newSteps<-tapply(new$steps,new$date,sum)
hist(newSteps,main="Steps Per Day",ylab="Days",xlab="Steps",ylim=c(0,35))
hist(newSteps,main="Steps Per Day",ylab="Number of Days",
xlab="Total Steps",ylim=c(0,35))
hist(oldSteps,main="Total Steps Per Day",
ylab="Number of Days",xlab="Total Steps",ylim=c(0,30))
newMean<-mean(newSteps,na.rm=T);newMean
newMedian<-median(newSteps,na.rm=T);newMedian
newMean-oldMean
newMedian-oldMedian
head(new)
plot(old$step,old$dttm)
plot(old$steps,old$dttm,type="l")
plot(old$dttm,old$steps,type="l")
lines(old$dttm,new$steps,type="l",col="red")
new$day<-weekdays(new$dttm)
head(new)
table(new$day)
table(new$day/288)
z<-table(new$day)
z/288
new$end.fl[new$day=="Saturday" | new$day=="Sunday"]<-1
new$end.fl[new$day=="Monday" | new$day=="Tuesday" | new$day=="Wednesday" | new$day=="Thursday" | new$day=="Friday"]<-0
table(new$end.fl)
5*9*288
2*8*288
z<-subset(new,end.fl=1)
dim(z)
dim(new)
?subset
z<-subset(new,end.fl==1)
dim(z)
z<-subset(new,end.fl==0)
dim(z)
par(mfrow=c(2,1))
plot(weekend,type="l",main="Average Daily Activity",ylab="Weekend Steps")
weekend<-with(subset(new,end.fl==1),tapply(new$steps,new$interval,mean,na.rm=T))
weekday<-with(subset(new,end.fl==0),tapply(new$steps,new$interval,mean,na.rm=T))
par(mfrow=c(2,1))
plot(weekend,type="l",main="Average Daily Activity",ylab="Weekend Steps")
plot(weekday,type="l",xlab="5-minute interval",ylab="Weekday Steps")
head(weekend)
head(weekday)
weekend<-with(subset(new,end.fl==1),tapply(steps,interval,mean,na.rm=T))
weekday<-with(subset(new,end.fl==0),tapply(steps,interval,mean,na.rm=T))
head(weekend)
head(weekday)
par(mfrow=c(2,1))
plot(weekend,type="l",main="Average Daily Activity",ylab="Weekend Steps")
plot(weekday,type="l",xlab="5-minute interval",ylab="Weekday Steps")
plot(weekend,type="l",main="Average Daily Activity",ylab="Weekend Steps")
library(ggplot2)
head(new)
ggplot(data=new) + geom_line(aes(x=interval, y = avg.steps, group=1))
ggplot(data=new) + geom_line(aes(x=interval, y = steps, group=1))
head(weekend)
head(weekday)
w<-cbind(weekend,weekday)
head(w)
plot(w)
plot(w,type="l")
dim(weekend)
dim(weekday)
plot(w$weekend)
plot(w$weekday)
plot(weekend)
plot(weekend,type="l")
plot(weekday,type="l")
par(mfrow=c(2,1))
plot(weekend,type="l",main="Average Daily Activity",ylab="Weekend Steps")
plot(weekday,type="l",xlab="5-minute interval",ylab="Weekday Steps")
par(mfrow=c(2,1),mar=c(1,1,1,1))
plot(weekend,type="l",main="Average Daily Activity",ylab="Weekend Steps")
plot(weekday,type="l",xlab="5-minute interval",ylab="Weekday Steps")
par(mfrow=c(2,1),mar=c(3,3,1,1))
plot(weekend,type="l",main="Average Daily Activity",ylab="Weekend Steps")
plot(weekday,type="l",xlab="5-minute interval",ylab="Weekday Steps")
par(mfrow=c(2,1),mar=c(4,4,1,1))
plot(weekend,type="l",main="Average Daily Activity",ylab="Weekend Steps")
plot(weekday,type="l",xlab="5-minute interval",ylab="Weekday Steps")
class(new$day)
new$day<-as.factor(weekdays(new$dttm))
class(new$day)
new$end.fl[new$day=="Saturday" | new$day=="Sunday"]<-1
new$end.fl[new$day=="Monday" | new$day=="Tuesday" | new$day=="Wednesday" | new$day=="Thursday" | new$day=="Friday"]<-0
weekend<-with(subset(new,end.fl==1),tapply(steps,interval,mean,na.rm=T))
weekday<-with(subset(new,end.fl==0),tapply(steps,interval,mean,na.rm=T))
par(mfrow=c(2,1),mar=c(4,4,1,1))
plot(weekend,type="l",main="Average Daily Activity",ylab="Weekend Steps")
plot(weekday,type="l",xlab="5-minute interval",ylab="Weekday Steps")
plot(weekend,type="l",main="Average Daily Activity",xlab="",ylab="Weekend Steps")
plot(weekday,type="l",xlab="5-minute interval",ylab="Weekday Steps")
w<-rbind(weekday,weekend)
head(w)
w<-cbind(weekend,weekday)
head(w)
*When NAs occur, I retrieve the rounded (via as.integer) average number of steps for the corresponding time interval across all days in the training data set*
head(new)
old<-read.csv("activity.csv",header=T)
head(old)
head(old)
head(weekday(old$date))
head(weekdays(old$date))
old$interval<-sprintf("%04d",old$interval)
old$dttm<-strptime(paste(old$date,time),format="%Y-%m-%d %H%M")
old$interval<-sprintf("%04d",old$interval)
old<-read.csv("activity.csv",header=T)
old$interval<-sprintf("%04d",old$interval)
old$dttm<-strptime(paste(old$date,old$interval),format="%Y-%m-%d %H%M")
oldSteps<-tapply(old$steps,old$date,sum)
hist(oldSteps,breaks=20,main="Total Steps Per Day",
ylab="Number of Days",xlab="Total Steps",ylim=c(0,30))
hist(oldSteps,breaks=20,main="Total Steps Per Day",
ylab="Number of Days",xlab="Total Steps",ylim=c(0,10))
hist(oldSteps,main="Total Steps Per Day",
ylab="Number of Days",xlab="Total Steps",ylim=c(0,30))
sum(!is.na(old$steps))
head(old)
dim(old)
17568-15264
oldSteps<-tapply(old$steps,old$date,sum,na.rm=TRUE)
oldMean<-mean(oldSteps,na.rm=TRUE);oldMean
z<-aggregate(steps~interval,data=data,FUN=mean)
z<-aggregate(steps~interval,data=old,FUN=mean)
head(z)
path<-"/Users/mdowns/RepData_PeerAssessment1"
setwd(path)
url<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
file<-"activity.zip"
if (!file.exists(file)) {
download.file(url, file, method = "curl")
unz(file,"activity.csv")
}
download.file(url, file, method = "curl")
unz(file,"activity.csv")
old<-read.csv("activity.csv",header=T)
old$interval<-sprintf("%04d",old$interval)
old$dttm<-strptime(paste(old$date,old$interval),format="%Y-%m-%d %H%M")
oldSteps<-tapply(old$steps,old$date,sum)
hist(oldSteps,main="Total Steps Per Day",
ylab="Number of Days",xlab="Total Steps",ylim=c(0,30))
hist(oldSteps,main="Total Steps Per Day",
ylab="Number of Days",xlab="Total Steps",ylim=c(0,30),col="red")
oldMean<-mean(oldSteps,na.rm=TRUE);oldMean
oldMedian<-median(oldSteps,na.rm=TRUE);oldMedian
head(old)
dim(old)
tail(old)
head(old,200)
head(old,2000)
knit2html(PA1_template.Rmd)
library(knitr)
knit2html(PA1_template.Rmd)
library(markdown)
knit2html(PA1_template.Rmd)
getwd()
knit("PA1_Template.Rmd")
markdownToHTML("PA1_Template.md", "PA1_Template.html")
getwd()
dim(old)
dim(na.omit(old))
names(old)
sum(steps,na.rm=T)
sum(old$steps,na.rm=T)
hist(old$steps)
sumstepsperday <- tapply(rawdata$steps, rawdata$date, FUN=sum, na.rm=TRUE)
head(sumstepsperday)
sumstepsperday <- tapply(old$steps, old$date, FUN=sum, na.rm=TRUE)
head(sumstepsperday)
head(old)
unique(old$date)
sum(unique(old$date))
length(unique(old$date))
library(ggplot2)
qplot(sumstepsperday, binwidth=1000, xlab="total number of steps taken each day", main="histogram created with ggplot2")
mean(sumstepsperday, na.rm=TRUE)
median(sumstepsperday, na.rm=TRUE)
meanstepsperinterval <- aggregate(x=list(steps=rawdata$steps), by=list(interval=rawdata$interval),
FUN=mean, na.rm=TRUE)
plot(meanstepsperinterval, type="l")
meanstepsperinterval <- aggregate(x=list(steps=rawdata$steps), by=list(interval=rawdata$interval),FUN=mean, na.rm=TRUE)
meanstepsperinterval <- aggregate(x=list(steps=old$steps), by=list(interval=old$interval),FUN=mean, na.rm=TRUE)
plot(meanstepsperinterval, type="l")
meanstepsperinterval[which.max(meanstepsperinterval$steps),]
nas <- is.na(rawdata$steps)
table(nas)
nas <- is.na(old$steps)
table(nas)
process.value <- function(steps, interval) {
processed <- NA
if (!is.na(steps))
processed <- c(steps)
else
processed <- (meanstepsperinterval[meanstepsperinterval$interval==interval, "steps"])
return(processed)
}
processed.data <- data
processed.data$steps <- mapply(process.value, processed.data$steps, processed.data$interval)
head(processed.data)
process.value <- function(steps, interval) {
processed <- NA
if (!is.na(steps))
processed <- c(steps)
else
processed <- (meanstepsperinterval[meanstepsperinterval$interval==interval, "steps"])
return(processed)
}
process.value
processed.data <- data
processed.data$steps <- mapply(process.value, processed.data$steps, processed.data$interval)
head(processed.data$steps)
head(processed.data)
processed.data=old
processed.data$steps <- mapply(process.value, processed.data$steps, processed.data$interval)
head(processed.data)
sumstepsperdayprocessed <- tapply(processed.data$steps, processed.data$date, FUN=sum, na.rm=TRUE)
head(sumstepsperdayprocessed)
library(ggplot2)
qplot(sumstepsperdayprocessed, binwidth=1000, xlab="total number of steps taken each day", main="histogram created with ggplot2")
mean(sumstepsperdayprocessed, na.rm=TRUE)
median(sumstepsperdayprocessed, na.rm=TRUE)
processed.data$weekday <- weekdays(as.Date(processed.data$date, format = "%Y-%m-%d"))
processed.data$weekday.type <- factor(ifelse(processed.data$weekday=="Lørdag"|processed.data$weekday=="Søndag", "weekend", "weekday"), levels = c("weekday", "weekend"))
head(processed.data)
weekdaysteps <- processed.data[processed.data$weekday.type == "weekday", ]
weekendsteps <- processed.data[processed.data$weekday.type == "weekend", ]
meanweekdaysstepsperinterval <- sapply(split(weekdaysteps$steps, weekdaysteps$interval), mean)
meanweekendstepsperinterval <- sapply(split(weekendsteps$steps, weekendsteps$interval), mean)
meanweeksteps <- data.frame(rbind(meanweekdaysstepsperinterval, meanweekendstepsperinterval))
par(mfrow = c(2,1), mar = c(4,5,2,2))
plot(meanweekdaysstepsperinterval, type="l", ylim=c(0,250), xlim=c(0,300), main="Weekday", ylab="", xlab="5 minute interval")
plot(meanweekendstepsperinterval, type="l", ylim=c(0,250), xlim=c(0,300), main="Weekend", ylab="", xlab="5 minute interval")
par(mfrow=c(1,1), mar=c(3,2,2,2))
mtext(text="Mean number of steps", side=2)
head(old)
head(oldSteps)
oldSteps
mean(oldSteps)
mean(oldSteps,na.rm=T)
median(oldSteps,na.rm=T)
